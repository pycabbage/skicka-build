on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      publish_release:
        description: 'Publish release'
        type: boolean
        required: true
        default: true

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: "android"
            goarch: "amd64"
          - goos: "android"
            goarch: "arm64"
          - goos: "darwin"
            goarch: "amd64"
          - goos: "darwin"
            goarch: "arm64"
          - goos: "dragonfly"
            goarch: "amd64"
          - goos: "freebsd"
            goarch: "386"
          - goos: "freebsd"
            goarch: "amd64"
          - goos: "freebsd"
            goarch: "arm"
          - goos: "freebsd"
            goarch: "arm64"
          - goos: "illumos"
            goarch: "amd64"
          - goos: "js"
            goarch: "wasm"
          - goos: "linux"
            goarch: "386"
          - goos: "linux"
            goarch: "amd64"
          - goos: "linux"
            goarch: "arm"
          - goos: "linux"
            goarch: "arm64"
          - goos: "linux"
            goarch: "mips"
          - goos: "linux"
            goarch: "mips64"
          - goos: "linux"
            goarch: "mips64le"
          - goos: "linux"
            goarch: "mipsle"
          - goos: "linux"
            goarch: "ppc64"
          - goos: "linux"
            goarch: "ppc64le"
          - goos: "linux"
            goarch: "riscv64"
          - goos: "linux"
            goarch: "s390x"
          - goos: "netbsd"
            goarch: "386"
          - goos: "netbsd"
            goarch: "amd64"
          - goos: "netbsd"
            goarch: "arm"
          - goos: "netbsd"
            goarch: "arm64"
          - goos: "openbsd"
            goarch: "386"
          - goos: "openbsd"
            goarch: "amd64"
          - goos: "openbsd"
            goarch: "arm"
          - goos: "openbsd"
            goarch: "arm64"
          - goos: "openbsd"
            goarch: "mips64"
          - goos: "plan9"
            goarch: "386"
          - goos: "plan9"
            goarch: "amd64"
          - goos: "plan9"
            goarch: "arm"
          - goos: "solaris"
            goarch: "amd64"
          - goos: "windows"
            goarch: "386"
          - goos: "windows"
            goarch: "amd64"
          - goos: "windows"
            goarch: "arm"
          - goos: "windows"
            goarch: "arm64"
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      FILENAME: skicka-${{ matrix.goos }}-${{ matrix.goarch }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: google/skicka
      - uses: actions/setup-go@v3
      - name: Go Version
        run: |
          go version
          go tool dist list
      - name: Go Mod Init
        run: |
          go mod init github.com/google/skicka
          go mod tidy
      - name: Build
        run: |
          mkdir build
          go build -o build/${{ env.FILENAME }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.FILENAME }}
          path: build/${{ env.FILENAME }}
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.publish_release == 'true' || github.event_name == 'push'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: build
      - name: List Artifacts
        run: ls build -lh
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*
          tag_name: build-${{ github.sha }}
